package com.example.strings;

public class StringStuff {
	
	public static void main(String[] args) {
		/*
		 * What is a string?
		 * an object that contains an array of characters, allowing you to create and manipulate strings
		 * 
		 * immutable: string cant be changed
		 * final: class cannot be extended
		 * 
		 * string objects are stored in the heap but string literals are stored in strign pool which is in the heap memory
		 */
		
		String s = "This is a string literal"; //string object will first reference string pool
		String s2 = s;//and point to it if it already exists. same as String s2 = "this is a string literal"
		
		String s3 = new String ("This is a string literal");//the new keyword will always create new object in heap memory
		String s4 = new String("This is a string literal");
		
		System.out.println(s == s2);
		System.out.println(s == s3);
		System.out.println(s3 == s4);
		
		System.out.println(s3.equals(s4));//better to use this method cause it checks contents rather than object creation
	
		//Why immutable?
	
	}

}
